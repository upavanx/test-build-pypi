[tox]
minversion = 3.1.1
envlist = py3,pep8
skipsdist = True
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
install_command = pip install -U {opts} {packages}
whitelist_externals = bash
                      find
                      rm
setenv =
   VIRTUAL_ENV={envdir}
   TEST_PATH=./test/

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

#pytest test/functional/test.py
commands =
  find . -type f -name "*.py[c|o]" -delete
  stestr --test-path=./test/ run {posargs}

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r edgesoftware -x tests -n5 -ll

[testenv:docs]
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:pep8]
commands =
  flake8
  # Run security linter
  bandit -r edgesoftware -x tests -n5 -ll

#coverage run -m pytest test/functional/test.py test/unit/test_utils.py
[testenv:cover]
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source edgesoftware --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:releasenotes]
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:venv]
commands = {posargs}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
